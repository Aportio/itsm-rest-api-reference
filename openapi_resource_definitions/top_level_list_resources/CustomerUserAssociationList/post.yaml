tags:
- CustomerUserAssociations
summary: Create a new Customer-User association
description: Create a new Customer-User association in the customer-user association table.
requestBody:
  content:
    application/json:
      schema:
        type: object
        properties:
          user_id:
            type: integer
          customer_id:
            type: integer
      examples:
        'Create a new Customer-User association':
          value: |-
            {
                "user_id": 3,
                "customer_id": 2
            }
responses:
  '201':
    description: Successful POST request. Returns the created Customer-User association.
    content:
      application/json:
        schema:
          type: object
          properties:
            _embedded:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    _links:
                      type: object
                      properties:
                        self:
                          type: object
                          properties:
                            href:
                              type: string
                    _created:
                      type: string
                    id:
                      type: integer
                    email:
                      type: array
                      items:
                        type: string
                customer:
                  type: object
                  properties:
                    _links:
                      type: object
                      properties:
                        self:
                          type: object
                          properties:
                            href:
                              type: string
                    _created:
                      type: string
                    name:
                      type: string
                    id:
                      type: integer
            _links:
              type: object
              properties:
                contained_in:
                  type: object
                  properties:
                    href:
                      type: string
                self:
                  type: object
                  properties:
                    href:
                      type: string
            user_id:
              type: integer
            _created:
              type: string
            _updated:
              type: string
            id:
              type: integer
            customer_id:
              type: integer
        examples:
          'Created Customer-User association':
            value: |
              {
                "_created": "2020-06-18T12:36:53.428798", 
                "_embedded": {
                  "customer": {
                    "_created": "", 
                    "_links": {
                      "self": {
                        "href": "/customers/2"
                      }
                    }, 
                    "id": 2, 
                    "name": "Bar Company"
                  }, 
                  "user": {
                    "_created": "", 
                    "_links": {
                      "self": {
                        "href": "/users/3"
                      }
                    }, 
                    "email": [
                      "foo@foobar.com"
                    ], 
                    "id": 3
                  }
                }, 
                "_links": {
                  "contained_in": {
                    "href": "/customer_user_associations"
                  }, 
                  "self": {
                    "href": "/customer_user_associations/7"
                  }
                }, 
                "_updated": "2020-06-18T12:36:53.428798", 
                "customer_id": 2, 
                "id": 7, 
                "user_id": 3
              }
  '400':
    description: Bad request. This usually occurs when a mandatory key is missing or is
                 malformed in the request body, or if the Customer-User association already
                 exists.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          'Customer-User association already exists':
            value: |
              {
                "message": "Bad Request - association between customer and user exists already"
              }
          'Invalid "user_id"':
            value: |
              {
                "message": "Bad Request - key 'user_id': unknown user '999'"
              }
          'Missing the "user_id" mandatory key':
            value: |
              {
                "message": "Bad Request - missing mandatory key(s): user_id"
              }
  '406':
    description: Not Acceptable. This usually occurs when a header is missing or malformed.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          'Missing "Accept" header':
            value: |
              {
                "message": "The resource identified by the request is only capable of
                            generating response entities which have content characteristics
                            not acceptable according to the accept headers sent in the
                            request. Supported entities are: application/json"
              }
          'Missing "Content-Type" header':
            value: |
              {
                "message": "API only supports 'application/json' Content-Type, received:
                            application/x-www-form-urlencoded"
              }

tags:
  - User
summary: Get the list of Customers for a given User
description: Return the list of Customers that a specific User is associated with.
parameters:
  - name: user_id
    in: path
    required: true
    description: The ID of the user to get customers for.
    schema:
      type: integer
    example: "/users/1/customers"
  - name: name
    in: query
    required: false
    description: Search for customers with this name who are associated with the given user.
    schema:
      type: string
    example: "?name=Foo Company"
  - name: parent_id
    in: query
    description: Search for customers with this customer ID as their parent who are associated
      with the given user.
    required: false
    schema:
      type: integer
    example: "?parent_id=3"
  - name: custom_fields.*
    in: query
    description: Search for customers that have this custom field who are associated with the
      given user.
    required: false
    schema:
      type: string
    example: "?custom_fields.phone=777-321-0987"
responses:
  '200':
    description: Successful GET request. Returns the Customers associated with a given User from the Customers table.
    content:
      application/json:
        schema:
          type: object
          properties:
            _embedded:
              type: object
              properties:
                customers:
                  type: array
                  items:
                    type: object
                    properties:
                      _links:
                        type: object
                        properties:
                          self:
                            type: object
                            properties:
                              href:
                                type: string
                      _created:
                        type: string
                      name:
                        type: string
                      id:
                        type: integer
            _links:
              type: object
              properties:
                contained_in:
                  type: object
                  properties:
                    href:
                      type: string
                self:
                  type: object
                  properties:
                    href:
                      type: string
            total_queried:
              type: integer
        examples:
          'Customers returned':
            value: |
              {
                  "total_queried": 3,
                  "_embedded": {
                      "customers": [
                          {
                              "id": 1,
                              "name": "Foo Company",
                              "_created": "",
                              "_links": {
                                  "self": {
                                      "href": "/customers/1"
                                  }
                              }
                          },
                          {
                              "id": 2,
                              "name": "Bar Company",
                              "_created": "",
                              "_links": {
                                  "self": {
                                      "href": "/customers/2"
                                  }
                              }
                          },
                          {
                              "id": 3,
                              "name": "Foobar Company",
                              "_created": "",
                              "_links": {
                                  "self": {
                                      "href": "/customers/3"
                                  }
                              }
                          }
                      ]
                  },
                  "_links": {
                      "self": {
                          "href": "/users/1/customers"
                      },
                      "contained_in": {
                          "href": "/users/1"
                      }
                  }
              }
  '406':
    description: Not Acceptable. This usually means the 'Accept' header isn't set properly. 
                 Acceptable headers are 'application/json' and 'text/html'.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          "Missing/incorrect 'Accept' header":
            value: |
              {
                "message": "The resource identified by the request is only capable of
                            generating response entities which have content characteristics not
                            acceptable according to the accept headers sent in the request.
                            Supported entities are: application/json, text/html"
              }

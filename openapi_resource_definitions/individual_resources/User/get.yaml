tags:
- User
summary: Get a specific user
description: Return the details about a specific user from the users table.
parameters:
  - name: user_id
    in: path
    required: true
    description: The ID of the user to get.
    schema:
      type: integer
    example: "/users/5"
responses:
  '200':
    description: Successful GET request for a specific user. Returns the user from users table.
    content:
      application/json:
        schema:
          type: object
          properties:
            _links:
              type: object
              properties:
                contained_in:
                  type: object
                  properties:
                    href:
                      type: string
                tickets:
                  type: object
                  properties:
                    href:
                      type: string
                self:
                  type: object
                  properties:
                    href:
                      type: string
                customers:
                  type: object
                  properties:
                    href:
                      type: string
            custom_fields:
              type: object
            id:
              type: integer
            email:
              type: array
              items:
                type: string
        examples:
          'Single email, no custom fields':
            value: |
              {
                  "id": 1,
                  "email": [
                      "some@user.com"
                  ],
                  "_links": {
                      "self": {
                          "href": "/users/1"
                      },
                      "contained_in": {
                          "href": "/users"
                      },
                      "customers": {
                          "href": "/users/1/customers"
                      },
                      "tickets": {
                          "href": "/users/1/tickets"
                      }
                  }
              }
          'Multiple emails with custom fields':
            value: |
              {
                  "id": 2,
                  "email": [
                      "another@user.com",
                      "with-multiple@emails.com"
                  ],
                  "custom_fields": {
                      "mobile": "412-333-4444",
                      "address": {
                          "street": "456 Elm Street",
                          "city": "Littleville"
                      }
                  },
                  "_links": {
                      "self": {
                          "href": "/users/2"
                      },
                      "contained_in": {
                          "href": "/users"
                      },
                      "customers": {
                          "href": "/users/2/customers"
                      },
                      "tickets": {
                          "href": "/users/2/tickets"
                      }
                  }
              }
  '404':
    description: The requested user doesn't exist in the database.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          "Requesting a user that doesn't exist":
            value: |
              {
                "message": "user '999' not found!"
              }
  '406':
    description: Not Acceptable. This usually means the 'Accept' header isn't set properly. 
                 Acceptable headers are 'application/json' and 'text/html'.
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
        examples:
          "Missing/incorrect 'Accept' header":
            value: |
              {
                "message": "The resource identified by the request is only capable of
                            generating response entities which have content characteristics not
                            acceptable according to the accept headers sent in the request.
                            Supported entities are: application/json, text/html"
              }
